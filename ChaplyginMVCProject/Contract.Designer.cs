//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace ChaplyginMVCProject
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class ContractEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект ContractEntities, используя строку соединения из раздела "ContractEntities" файла конфигурации приложения.
        /// </summary>
        public ContractEntities() : base("name=ContractEntities", "ContractEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ContractEntities.
        /// </summary>
        public ContractEntities(string connectionString) : base(connectionString, "ContractEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ContractEntities.
        /// </summary>
        public ContractEntities(EntityConnection connection) : base(connection, "ContractEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ContractInfo> ContractInfo
        {
            get
            {
                if ((_ContractInfo == null))
                {
                    _ContractInfo = base.CreateObjectSet<ContractInfo>("ContractInfo");
                }
                return _ContractInfo;
            }
        }
        private ObjectSet<ContractInfo> _ContractInfo;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ContractInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToContractInfo(ContractInfo contractInfo)
        {
            base.AddObject("ContractInfo", contractInfo);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ContractModel", Name="ContractInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ContractInfo.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="contractNumber">Исходное значение свойства ContractNumber.</param>
        /// <param name="contractSubject">Исходное значение свойства ContractSubject.</param>
        /// <param name="fullName">Исходное значение свойства FullName.</param>
        /// <param name="contractDate">Исходное значение свойства ContractDate.</param>
        /// <param name="executorInfo">Исходное значение свойства ExecutorInfo.</param>
        /// <param name="sum">Исходное значение свойства Sum.</param>
        /// <param name="sygnatory">Исходное значение свойства Sygnatory.</param>
        /// <param name="contactInfo">Исходное значение свойства ContactInfo.</param>
        public static ContractInfo CreateContractInfo(global::System.Int32 id, global::System.Int32 contractNumber, global::System.String contractSubject, global::System.String fullName, global::System.DateTime contractDate, global::System.String executorInfo, global::System.Double sum, global::System.String sygnatory, global::System.String contactInfo)
        {
            ContractInfo contractInfo = new ContractInfo();
            contractInfo.ID = id;
            contractInfo.ContractNumber = contractNumber;
            contractInfo.ContractSubject = contractSubject;
            contractInfo.FullName = fullName;
            contractInfo.ContractDate = contractDate;
            contractInfo.ExecutorInfo = executorInfo;
            contractInfo.Sum = sum;
            contractInfo.Sygnatory = sygnatory;
            contractInfo.ContactInfo = contactInfo;
            return contractInfo;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractNumber
        {
            get
            {
                return _ContractNumber;
            }
            set
            {
                OnContractNumberChanging(value);
                ReportPropertyChanging("ContractNumber");
                _ContractNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractNumber");
                OnContractNumberChanged();
            }
        }
        private global::System.Int32 _ContractNumber;
        partial void OnContractNumberChanging(global::System.Int32 value);
        partial void OnContractNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContractSubject
        {
            get
            {
                return _ContractSubject;
            }
            set
            {
                OnContractSubjectChanging(value);
                ReportPropertyChanging("ContractSubject");
                _ContractSubject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContractSubject");
                OnContractSubjectChanged();
            }
        }
        private global::System.String _ContractSubject;
        partial void OnContractSubjectChanging(global::System.String value);
        partial void OnContractSubjectChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                OnContractDateChanging(value);
                ReportPropertyChanging("ContractDate");
                _ContractDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContractDate");
                OnContractDateChanged();
            }
        }
        private global::System.DateTime _ContractDate;
        partial void OnContractDateChanging(global::System.DateTime value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExecutorInfo
        {
            get
            {
                return _ExecutorInfo;
            }
            set
            {
                OnExecutorInfoChanging(value);
                ReportPropertyChanging("ExecutorInfo");
                _ExecutorInfo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExecutorInfo");
                OnExecutorInfoChanged();
            }
        }
        private global::System.String _ExecutorInfo;
        partial void OnExecutorInfoChanging(global::System.String value);
        partial void OnExecutorInfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Sum
        {
            get
            {
                return _Sum;
            }
            set
            {
                OnSumChanging(value);
                ReportPropertyChanging("Sum");
                _Sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sum");
                OnSumChanged();
            }
        }
        private global::System.Double _Sum;
        partial void OnSumChanging(global::System.Double value);
        partial void OnSumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sygnatory
        {
            get
            {
                return _Sygnatory;
            }
            set
            {
                OnSygnatoryChanging(value);
                ReportPropertyChanging("Sygnatory");
                _Sygnatory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sygnatory");
                OnSygnatoryChanged();
            }
        }
        private global::System.String _Sygnatory;
        partial void OnSygnatoryChanging(global::System.String value);
        partial void OnSygnatoryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactInfo
        {
            get
            {
                return _ContactInfo;
            }
            set
            {
                OnContactInfoChanging(value);
                ReportPropertyChanging("ContactInfo");
                _ContactInfo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactInfo");
                OnContactInfoChanged();
            }
        }
        private global::System.String _ContactInfo;
        partial void OnContactInfoChanging(global::System.String value);
        partial void OnContactInfoChanged();

        #endregion

    
    }

    #endregion

    
}
